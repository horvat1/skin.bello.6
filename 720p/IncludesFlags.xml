<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<variable name="MPAAFilmRating">
		<value condition="String.Contains(ListItem.Mpaa,Rated G) | String.Contains(ListItem.Mpaa,Rated: G)">flags/mpaa/film/us/rating-g.png</value>
		<value condition="[String.Contains(ListItem.Mpaa,Rated PG) | String.Contains(ListItem.Mpaa,Rated: PG | String.Contains(ListItem.Mpaa, PG)] + !String.Contains(ListItem.Mpaa,Rated PG-13) + !String.Contains(ListItem.Mpaa,Rated: PG-13) + !String.Contains(ListItem.Mpaa, PG-13)">flags/mpaa/film/us/rating-pg.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Rated PG-13) | String.Contains(ListItem.Mpaa,Rated: PG-13) | String.Contains(ListItem.Mpaa, PG-13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Rated R) | String.Contains(ListItem.Mpaa,Rated: R) | String.Contains(ListItem.Mpaa, R)">flags/mpaa/film/us/rating-r.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Rated NC-17) | String.Contains(ListItem.Mpaa,Rated: NC-17) | String.Contains(ListItem.Mpaa, NC-17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Germany:0) | String.Contains(ListItem.Mpaa,Germany:o.A) | String.Contains(ListItem.Mpaa,FSK0) | String.Contains(ListItem.Mpaa,FSK 0) | String.Contains(ListItem.Mpaa,FSK o.A)">flags/mpaa/film/de/fsk0.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Germany:6) | String.Contains(ListItem.Mpaa,FSK6) | String.Contains(ListItem.Mpaa,FSK 6)">flags/mpaa/film/de/fsk6.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Germany:12) | String.Contains(ListItem.Mpaa,FSK12) | String.Contains(ListItem.Mpaa,FSK 12)">flags/mpaa/film/de/fsk12.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Germany:16) | String.Contains(ListItem.Mpaa,FSK16) | String.Contains(ListItem.Mpaa,FSK 16)">flags/mpaa/film/de/fsk16.png</value>
		<value condition="String.Contains(ListItem.Mpaa,Germany:18) | String.Contains(ListItem.Mpaa,FSK18) | String.Contains(ListItem.Mpaa,FSK 18)">flags/mpaa/film/de/fsk18.png</value>
    <value>flags/mpaa/film/us/rating-nr.png</value>
	</variable>

	<variable name="MPAAFilmRatingGlobalSearch">
		<value condition="String.Contains(Container(100).ListItem.Mpaa,Rated G) | String.Contains(Container(100).ListItem.Mpaa,Rated: G)">flags/mpaa/film/us/rating-g.png</value>
		<value condition="[String.Contains(Container(100).ListItem.Mpaa,Rated PG) | String.Contains(Container(100).ListItem.Mpaa,Rated: PG)] + !String.Contains(Container(100).ListItem.Mpaa,Rated PG-13) + !String.Contains(Container(100).ListItem.Mpaa,Rated: PG-13)">flags/mpaa/film/us/rating-pg.png</value>
		<value condition="String.Contains(Container(100).ListItem.Mpaa,Rated PG-13) | String.Contains(Container(100).ListItem.Mpaa,Rated: PG-13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.Contains(Container(100).ListItem.Mpaa,Rated R) | String.Contains(Container(100).ListItem.Mpaa,Rated: R)">flags/mpaa/film/us/rating-r.png</value>
		<value condition="String.Contains(Container(100).ListItem.Mpaa,Rated NC-17) | String.Contains(Container(100).ListItem.Mpaa,Rated: NC-17)">flags/mpaa/film/us/rating-nc17.png</value>
    <value>flags/mpaa/film/us/rating-nr.png</value>
	</variable>

	<variable name="MPAAMetadataInfoFilmRating">
		<value condition="String.StartsWith(Window.Property(mpaa),G)">flags/mpaa/film/us/rating-g.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated G)">flags/mpaa/film/us/rating-g.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),NC-17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated NC-17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),NC17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated NC17)">flags/mpaa/film/us/rating-nc17.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),PG)">flags/mpaa/film/us/rating-pg.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated PG)">flags/mpaa/film/us/rating-pg.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),PG13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated PG13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),PG-13)">flags/mpaa/film/us/rating-pg13.png</value>rating-pg13
		<value condition="String.StartsWith(Window.Property(mpaa),Rated PG-13)">flags/mpaa/film/us/rating-pg13.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),R)">flags/mpaa/film/us/rating-r.png</value>
		<value condition="String.StartsWith(Window.Property(mpaa),Rated R)">flags/mpaa/film/us/rating-r.png</value>	
    <value>flags/mpaa/film/us/rating-nr.png</value>
	</variable>

	<variable name="VideoCodec">
		<value condition="String.Contains(ListItem.VideoCodec,divx) | String.Contains(ListItem.VideoCodec,div2) | String.Contains(ListItem.VideoCodec,div3) | String.Contains(ListItem.VideoCodec,div4) | String.Contains(ListItem.VideoCodec,divx 4) | String.Contains(ListItem.VideoCodec,div5) | String.Contains(ListItem.VideoCodec,dx50)">divx</value>
		<value condition="String.Contains(ListItem.VideoCodec,xvid)">xvid</value>
		<value>$INFO[ListItem.VideoCodec]</value>
	</variable>

	<include name="FlagsLayout">
			<width>80</width>
			<height>30</height>
			<colordiffuse>mediaflags</colordiffuse>
			<aspectratio align="center">keep</aspectratio>
	</include>

	<include name="FlagsLayoutAudioChannels">
			<width>49</width>
			<height>30</height>
			<colordiffuse>mediaflags</colordiffuse>
			<aspectratio align="center">keep</aspectratio>
	</include>

	<include name="FlagsOSDLayout">
			<width>76</width>
			<height>28</height>
			<colordiffuse>mediaflags</colordiffuse>
			<aspectratio align="center">keep</aspectratio>
	</include>
	<include name="FlagsOSDLayoutAudioChannels">
			<width>45</width>
			<height>28</height>
			<colordiffuse>mediaflags</colordiffuse>
			<aspectratio align="center">keep</aspectratio>
	</include>

	<include name="AspectRatioFlagsConditions">
		<control type="image">
			<description>Aspectratio Image</description>
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[ListItem.VideoAspect,flags/aspect/,.png]</texture>
		</control>
	</include>

	<include name="AspectRatioFlagsConditionsTwo">
		<control type="image">
			<description>Aspectratio Image</description>
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[Window.Property(VideoAspect),flags/aspect/,.png]</texture>
		</control>
	</include>

	<include name="VideoResFlagsConditions">
		<control type="image">
			<description>Video Resolution Image</description>
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[ListItem.VideoResolution,flags/res/,.png]</texture>
		</control>
	</include>

	<include name="VideoResFlagsConditionsTwo">
		<control type="image">
			<description>Video Resolution Image</description>
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[Window.Property(VideoResolution),flags/res/,.png]</texture>
		</control>
	</include>

	<include name="VideoCodecFlagsConditions">		
		<control type="image">
			<description>Video Codec Image</description>
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$VAR[VideoCodec,flags/video/,.png]</texture>
		</control>
	</include>

  <include name="VideoCodecFlagsConditionsTwo">		
		<control type="image">
			<description>Video Codec Image</description>
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[Window.Property(VideoCodec),flags/video/,.png]</texture>
		</control>
	</include>

	<include name="AudioCodecFlagsConditions">
		<control type="image">
			<description>Audio Codec Image</description>
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[ListItem.AudioCodec,flags/audio/,.png]</texture>
		</control>
	</include>

	<include name="AudioCodecFlagsConditionsTwo">
		<control type="image">
			<description>Audio Codec Image</description>
			<include>FlagsLayout</include>
			<texture fallback="flags/na.png">$INFO[Window.Property(AudioCodec),flags/audio/,.png]</texture>
		</control>
	</include>

	<include name="AudioChannelsFlagsConditions">
		<control type="image">
			<description>Audio Channels Image</description>
			<include>FlagsLayoutAudioChannels</include>
			<texture>$INFO[ListItem.AudioChannels,flags/channels/,.png]</texture>
		</control>
	</include>

	<include name="AudioChannelsFlagsConditionsTwo">
		<control type="image">
			<description>Audio Channels Image</description>
			<include>FlagsLayoutAudioChannels</include>
			<texture>$INFO[Window.Property(AudioChannels),flags/channels/,.png]</texture>
		</control>
	</include>

	<include name="VideoStereoscopicsFlagsConditions">
		<control type="image">
			<description>Video Stereoscopics Image</description>
			<include>FlagsLayout</include>
			<texture>flags/video/3d.png</texture>
			<visible>ListItem.IsStereoscopic</visible>
		</control>
	</include>


	<include name="CameraLogosLayout">
			<left>0</left>
			<top>0</top>
			<width>161</width>
			<height>109</height>
	    <colordiffuse>mediaflags</colordiffuse>
	</include>

	<include name="CameraLogosFlags">
<!-- *Disabled*
		<control type="image">
      <include>CameraLogosLayout</include>
      <texture>views/list/info.png</texture>
			<visible>String.IsEmpty(ListItem.PictureCamMake)</visible>
		</control>
-->
		<control type="image">
      <include>CameraLogosLayout</include>
      <texture>flags/camera/Canon.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Canon) | String.Contains(ListItem.PictureCamModel,Canon)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
      <texture>flags/camera/FujiFilm.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,FujiFilm) | String.Contains(ListItem.PictureCamModel,FujiFilm)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
      <texture>flags/camera/Kodak.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Kodak) | String.Contains(ListItem.PictureCamModel,Kodak)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
      <texture>flags/camera/Leica.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Leica) | String.Contains(ListItem.PictureCamModel,Leica)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
      <texture>flags/camera/Nikon.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Nikon) | String.Contains(ListItem.PictureCamModel,Nikon)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
      <texture>flags/camera/Nokia.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Nokia) | String.Contains(ListItem.PictureCamModel,Nokia)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
      <texture>flags/camera/Olympus.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Olympus) | String.Contains(ListItem.PictureCamModel,Olympus)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
      <texture>flags/camera/Panasonic.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Panasonic) | String.Contains(ListItem.PictureCamModel,Panasonic)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
      <texture>flags/camera/Polaroid.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Polaroid) | String.Contains(ListItem.PictureCamModel,Polaroid)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
      <texture>flags/camera/Samsung.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Samsung) | String.Contains(ListItem.PictureCamModel,Samsung)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
      <texture>flags/camera/Sony.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Sony) | String.Contains(ListItem.PictureCamModel,Sony)</visible>
		</control>
		<control type="image">
			<include>CameraLogosLayout</include>
      <texture>flags/camera/Toshiba.png</texture>
			<visible>String.Contains(ListItem.PictureCamMake,Toshiba) | String.Contains(ListItem.PictureCamModel,Toshiba)</visible>
		</control>
	</include>

	<include name="VideoLanguageFlagsLayout">
			<left>32</left>
			<top>2</top>
			<width>30</width>
			<height>27</height>
			<aspectratio>stretch</aspectratio>
	</include>

	<include name="VideoLanguageFlags">
		<control type="grouplist">
				<align>left</align>
				<aligny>center</aligny>
				<orientation>horizontal</orientation>
				<!-- Audio Language -->
				<control type="group">
          <width>68</width>
          <visible>!String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
				  <control type="image">
						<width>66</width>
				    <include>FlagsLayout</include>
				    <texture>flags/language/language_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagsLayout</include>
				    <texture>$INFO[ListItem.Property(AudioLanguage.1),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
          <width>68</width>
          <visible>!String.IsEmpty(ListItem.Property(AudioLanguage.2))</visible>
          <visible>!String.IsEqual(ListItem.Property(AudioLanguage.1),ListItem.Property(AudioLanguage.2))</visible>
				  <control type="image">
			      <width>66</width>
				    <include>FlagsLayout</include>
				    <texture>flags/language/language_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagsLayout</include>
				    <texture>$INFO[ListItem.Property(AudioLanguage.2),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
          <width>68</width>
          <visible>!String.IsEmpty(ListItem.Property(AudioLanguage.3))</visible>
          <visible>!String.IsEqual(ListItem.Property(AudioLanguage.1),ListItem.Property(AudioLanguage.3))</visible>
          <visible>!String.IsEqual(ListItem.Property(AudioLanguage.2),ListItem.Property(AudioLanguage.3))</visible>
				  <control type="image">
			      <width>66</width>
				    <include>FlagsLayout</include>
				    <texture>flags/language/language_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagsLayout</include>
				    <texture>$INFO[ListItem.Property(AudioLanguage.3),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<!-- Subtitle Language -->
				<control type="group">
          <width>68</width>
				  <visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.1))</visible>
				  <control type="image">
			      <width>66</width>
				    <include>FlagsLayout</include>
				    <texture>flags/language/subtitle_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagsLayout</include>
				    <texture>$INFO[ListItem.Property(SubtitleLanguage.1),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
          <width>68</width>
          <visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.2))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.1),ListItem.Property(SubtitleLanguage.2))</visible>
				  <control type="image">
			      <width>66</width>
				    <include>FlagsLayout</include>
				    <texture>flags/language/subtitle_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagsLayout</include>
				    <texture>$INFO[ListItem.Property(SubtitleLanguage.2),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
          <width>68</width>
          <visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.3))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.1),ListItem.Property(SubtitleLanguage.3))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.2),ListItem.Property(SubtitleLanguage.3))</visible>
				  <control type="image">
			      <width>66</width>
				    <include>FlagsLayout</include>
				    <texture>flags/language/subtitle_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagsLayout</include>
				    <texture>$INFO[ListItem.Property(SubtitleLanguage.3),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
          <width>68</width>
          <visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.4))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.1),ListItem.Property(SubtitleLanguage.4))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.2),ListItem.Property(SubtitleLanguage.4))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.3),ListItem.Property(SubtitleLanguage.4))</visible>
				  <control type="image">
			      <width>66</width>
				    <include>FlagsLayout</include>
				    <texture>flags/language/subtitle_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagsLayout</include>
				    <texture>$INFO[ListItem.Property(SubtitleLanguage.4),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
          <width>68</width>
          <visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.5))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.1),ListItem.Property(SubtitleLanguage.5))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.2),ListItem.Property(SubtitleLanguage.5))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.3),ListItem.Property(SubtitleLanguage.5))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.4),ListItem.Property(SubtitleLanguage.5))</visible>
				  <control type="image">
			      <width>66</width>
				    <include>FlagsLayout</include>
				    <texture>flags/language/subtitle_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagsLayout</include>
				    <texture>$INFO[ListItem.Property(SubtitleLanguage.5),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
				<control type="group">
          <width>68</width>
          <visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.6))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.1),ListItem.Property(SubtitleLanguage.6))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.2),ListItem.Property(SubtitleLanguage.6))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.3),ListItem.Property(SubtitleLanguage.6))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.4),ListItem.Property(SubtitleLanguage.6))</visible>
          <visible>!String.IsEqual(ListItem.Property(SubtitleLanguage.5),ListItem.Property(SubtitleLanguage.6))</visible>
				  <control type="image">
			      <width>66</width>
				    <include>FlagsLayout</include>
				    <texture>flags/language/subtitle_flag.png</texture>
				  </control>
				  <control type="image">
				    <include>VideoLanguageFlagsLayout</include>
				    <texture>$INFO[ListItem.Property(SubtitleLanguage.6),resource://resource.images.languageflags.colour/,.png]</texture>
				  </control>
				</control>
		</control>
	</include>

</includes>